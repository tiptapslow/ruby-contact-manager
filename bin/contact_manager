#!/usr/bin/env ruby

# frozen_string_literal: true

require_relative '../lib/contact'
require_relative '../lib/contact_list'

contact_list = ContactList.new

# Add some initial contacts
contact1 = Contact.new('John Doe', 'john@example.com', '123-456-7890')
contact2 = Contact.new('Jane Smith', 'jane@example.com', '987-654-3210')
contact3 = Contact.new('Bob Johnson', 'bob@example.com', '456-789-0123')

contact_list.add_contact(contact1)
contact_list.add_contact(contact2)
contact_list.add_contact(contact3)

loop do
  puts 'What would you like to do?'
  puts '1. Add a new contact'
  puts '2. Delete a contact'
  puts '3. Find a contact'
  puts '4. List all contacts'
  puts '5. Search contacts'
  puts '6. Exit'
  choice = gets.chomp

  case choice
  when '1'
    print 'Enter name: '
    name = gets.chomp
    print 'Enter email: '
    email = gets.chomp
    print 'Enter phone number: '
    phone = gets.chomp
    contact = Contact.new(name, email, phone)
    contact_list.add_contact(contact)
    puts "Contact #{name} added successfully."
  when '2'
    print 'Enter name of contact to delete: '
    name = gets.chomp
    contact = contact_list.find_contact(name)
    if contact
      contact_list.delete_contact(contact)
      puts "Contact #{name} deleted successfully."
    else
      puts "Contact #{name} not found."
    end
  when '3'
    print 'Enter name of contact to find: '
    name = gets.chomp
    contact = contact_list.find_contact(name)
    puts contact || "Contact #{name} not found."
  when '4'
    names = contact_list.all_contact_names
    if names.empty?
      puts 'No contacts found.'
    else
      puts 'All contacts:'
      names.each { |name| puts name }
    end
  when '5'
    print 'Enter search query: '
    query = gets.chomp
    contacts = contact_list.search(query)
    if contacts.empty?
      puts "No contacts found for query '#{query}'."
    else
      puts "Contacts found for query '#{query}':"
      contacts.each { |contact| puts contact }
    end
  when '6'
    puts 'Goodbye!'
    break
  else
    puts 'Invalid choice. Please try again.'
  end

  puts
end
